package com.hexaware.roadready.service;

import java.time.LocalDate;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.hexaware.roadready.dto.AdminDTO;
import com.hexaware.roadready.entities.Admin;
import com.hexaware.roadready.repository.AdminRepository;
import com.hexaware.roadready.repository.AgentRepository;
import com.hexaware.roadready.repository.CustomerRepository;
import com.hexaware.roadready.repository.PaymentRepository;

import jakarta.transaction.Transactional;


@Transactional
@Service
public class AdminServiceImpl implements IAdminService {
    
	Logger logger=LoggerFactory.getLogger(AdminServiceImpl.class);
	
	@Autowired
	AdminRepository adminRepo;
	
	@Autowired
	PaymentRepository paymentRepo;
	
	@Autowired
	PasswordEncoder passwordEncoder;
	
	@Autowired
	CustomerRepository customerRepo;
	@Autowired
	AgentRepository agentRepo;

	@Override
	public String revenueReportBetweenDates(LocalDate startDate , LocalDate endDate) {
		Double amount = paymentRepo.findRevenueBetweenDates(startDate, endDate);
		return "Total revenue Generated Between " + startDate + " and " +endDate+ " is " + amount;
	}

	@Override
	public String revenueReportGeneratedByCustomer(int customerId) {
		Double amount = paymentRepo.findRevenueBycustomerId(customerId);
		return "Total Revenue Generated By Customer " + customerId + " is " +amount;
	}

	@Override
	public String totalRevenueReport() {
		Double amount = paymentRepo.findTotalRevenue();
		logger.info("Total revenue report generated");
		return "Total Revenue generated till today for RoadReady is " + amount ;
	}

	@Override
	public Admin addAdmin(AdminDTO admindto) {
		Admin admin = new Admin();
		admin.setAdminId(admindto.getAdminId());
		admin.setUsername(admindto.getUsername());
		 admin.setPassword(passwordEncoder.encode(admindto.getPassword()));
		 admin.setRole("ROLE_ADMIN");
		return adminRepo.save(admin);
		
	}

	@Override
	public double totalRevenue() {
		return paymentRepo.findTotalRevenue();
	}

	@Override
    public boolean checkIfAdminExists(String username) {
        return adminRepo.existsByUsername(username);
    }

    @Override
    public String updateAdminPassword(String username, String newPassword) {
        Admin admin = adminRepo.findByUsername(username).orElse(null);
        admin.setPassword(newPassword);
        adminRepo.save(admin);
        return "Admin password updated successfully";
    }
	
	
	

	
	

	

}
